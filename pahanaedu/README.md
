# Pahana Bookshop System

This repository contains the Online Billing System of **pahanaedu bookshop**developed for the CIS6003 Advanced Programming module.  
The project is built using Java (JSP & Servlets),MySQL workbench, and follows OOP principles, SOLID design, and DAO architecture.

---

##Features
- **User Authentication** (Login/Logout)  
- **Customer Management** (Add, Update, Delete, List)  
- **Item Management** (CRUD operations)  
- **Billing System**(Invoice generation,billing process) 
- **User management** 
- **Role-based Access Control**(Admin / User)  

---
##Tech Stack
- *8Backend:**Java Servlets, JSP  
- **Database:** MySQL workbench
- **Build Tool:**Maven  
- **Server:**Apache Tomcat  
- **IDE:**Eclipse

---

##Project Structure
pahanaedu/
┣ src/main/java/com/pahanaedu/
┃ ┣ dao/ → DAO classes for database access
┃ ┣ model/ → POJO models (User, Customer, Item, Bill)
┃ ┣ servlet/ → Servlets handling HTTP requests
┃ ┗ util/ → Utility classes (DBUtil, etc.)
┣ src/main/webapp/
┃ ┣ views/ → JSP pages (login.jsp, dashboard.jsp, etc.)
┃ ┗ WEB-INF/ → Config files (web.xml)
┣ pom.xml → Maven dependencies
┗ README.md → Documentation

## 🚀 Installation & Setup

### Prerequisites
Ensure the following are installed on your system:  
- Java Development Kit (JDK 11 or later)  
- Eclipse IDE  
- MySQL Server & MySQL Workbench  
- Apache Tomcat (v9 or later)  
- Git  

### Steps to Set Up
1. **Clone the Repository**
   ```bash
   git clone https://github.com/ryannandasena/Pahana-Edu-Bookshop-Sys.git
   cd Pahana-Edu-Bookshop-Sys
Configure the Database

Open MySQL Workbench

Import the provided SQL script (in /db/ folder) to set up required tables

Run the System

Open the project in Eclipse

Configure Apache Tomcat server

Run the application on the server

The system will work fully once the database is imported and connected.



## Git Workflow
- Repository has two main branches:  
  - **master** → Stable, production-ready code  
  - **dev** → Active development branch  

- Workflow followed:  
  1. Initial commit with base project structure  
  2. Daily commits on `dev` branch with new features  
  3. Merged tested features from `dev` → `master`  

---

## Version Control Techniques
- **Branching:** Development isolated from production  
- **Commit History:** Frequent, meaningful commits documenting changes  
- **Merging:** Tested code merged into `master` branch  
- **Versioning:** Each commit and branch represents a project version  

---

##  Repository Access
This repository is **public** and can be accessed here:  
👉GitHub Repository Link - https://github.com/ryannandasena/Pahana-Edu-Bookshop-Sys.git  

---

##Future Enhancements

--Improved UI with responsive design (mobile-friendly JSP pages)
--Advanced search and filtering for customers and items
--Online payment gateway integration

👨‍💻 Author
- **Name**RyanTehan
- **Module**Advanced Programming – CIS6003
**Institution:** cardiff 